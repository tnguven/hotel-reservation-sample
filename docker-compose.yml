x-common: &common
  ENV: ${GO_ENV:-development}
  MONGO_URI: ${MONGO_URI:-mongodb://mongodb:27017}
  MONGO_DATABASE: ${MONGO_DATABASE:-hotel_io}

services:
  mongodb:
    image: mongo:8
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "${MONGO_PORT:-27017}:${MONGO_PORT:-27017}"
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - ./scripts/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
    environment:
      MONGO_INITDB_DATABASE: "${MONGO_DATABASE:-hotel_io}"

  mongo-init:
    image: mongo:8
    container_name: mongo-init
    depends_on:
      - mongodb
    restart: "no"
    entrypoint:
      [
        "bash",
        "-c",
        "sleep 5 && mongosh --host mongodb:27017 --eval 'rs.initiate()'",
      ]

  svc-api:
    build:
      context: .
      dockerfile: Dockerfile.svc
      args:
        service: svc-api
    container_name: svc-api
    environment:
      <<: *common
      LISTEN_ADDR: ${LISTEN_ADDR:-5000}
      JWT_SECRET: ${JWT_SECRET:-secret}
      EXPIRE_IN_HOURS: ${EXPIRE_IN_HOURS:-72}
    command: ["/app/svc-api"]
    develop:
      watch:
        - action: rebuild
          path: ./cmd/svc-api
        - action: rebuild
          path: ./internals
    depends_on:
      - task-seeder
    ports:
      - ${LISTEN_ADDR:-5000}:${LISTEN_ADDR:-5000}

  task-seeder:
    build:
      context: .
      dockerfile: Dockerfile.svc
      args:
        service: task-seeder
    container_name: task-seeder
    command: ["/app/task-seeder"]
    develop:
      watch:
        - action: rebuild
          path: ./cmd/task-seeder
        - action: rebuild
          path: ./db
    environment:
      <<: *common
      LISTEN_ADDR: ${LISTEN_ADDR:-5000}
      JWT_SECRET: ${JWT_SECRET:-secret}
      EXPIRE_IN_HOURS: ${EXPIRE_IN_HOURS:-72}
    depends_on:
      - mongodb
